---
import A from '@components/base/A.astro';
import PageTitle from '@components/base/PageTitle.astro';
import Layout from '@layouts/Layout.astro';

import { getCollection } from 'astro:content';

const allThoughts = await getCollection('thoughts');
allThoughts.sort((a: any, b: any) => b.data.lastEdited - a.data.lastEdited);
---

<Layout title="Thought garden">
	<main>
        <section class="hero">
            <hgroup>
                <h1 class="hero">
                    <PageTitle maxWidth={9}>Thought garden</PageTitle>
                    <span class="fallback">Thought garden</span>
                </h1>
                <p class="fade-in style-h4" style="--animation-delay: 700ms;">
                    An evolving collection of, well, thoughts. In various formats and mediums.
                </p>
            </hgroup>
            <p class="fade-in" style="--animation-delay: 800ms;">
                Welcome to my Thought Garden. The idea here is to cultivate a Digital Garden - a concept that I discovered in
                <A href="https://maggieappleton.com/garden-history">this explainer piece</A> a little while back. The mutability and imperfection
                inherent within the "Garden" idea is really appealing as the idea is that I can post and update as I go. There isn't really enough content
                in here yet for me to implement anything <em>too</em> cool with the design but hopefully that changes as I write more.
            </p>
        </section>
        {allThoughts.length > 0 &&
            <section id="thoughts-list" class="thoughts-list fade-in" style="--animation-delay: 900ms;">
                <ul>
                    {allThoughts.map(thought => (
                        <li class="thought">
                            <div class="text">
                                <div class="top-line">
                                    <p class="pill">
                                        {
                                            thought.data.type === 'short-form' ?
                                            'note' :
                                            thought.data.subType || 'essay'
                                        }
                                    </p>
                                    <p class="small">{thought.data.state}</p>
                                </div>
                                <a class="container" href={`${thought.id}`} data-astro-prefetch>
                                    <h3>{thought.data.title}</h3>
                                </a>
                                {thought.data.tagline && <p class="tag small">{thought.data.tagline}</p>}
                                <a class="arrow" href={`${thought.id}`} data-astro-prefetch>Read it</a>
                            </div>
                        </li>
                    ))}
                </ul>
                <a class="arrow" href="#thoughts-list">
                    back to top
                </a>
            </section>
        }
    </main>
</Layout> 

<style lang="scss">
    @use '@assets/styles/sass/breakpoints.scss' as media;

    main {
        display: flex;
        flex-direction: column;
        gap: var(--spacing);
        width: 1000px;

        padding-bottom: 100px;
    }
    section {
        gap: calc(var(--spacing) / 2);
        
        &.hero {
            margin-bottom: 2rem;
        }
    }


    h1 {
        margin-bottom: 0.5rem;
        
        .fallback {
            display: none;
            content-visibility: hidden;
            line-height: 1;
        }
        
        @media screen and (max-width: 400px) {
            line-height: 1;

            :global(.page-title) {
                display: none;
                content-visibility: hidden;
            }
            .fallback {
                display: inline-block;
                content-visibility: auto;
            }
        }
    }

    .tag {
        max-width: 30em;
        text-wrap: pretty;
    }

    ul {
        --spacing: 2rem;
        @include media.at('medium') {
            --spacing: 2.5rem;
        }

        display: flex;
        flex-direction: column;
        gap: 0;
        padding-left: 0;

        li {
            display: flex;
            gap: 2rem;
            padding-bottom: var(--spacing);
            padding-top: var(--spacing);

            border-bottom: color-mix(in srgb, var(--color-text) 50%, transparent 80%) 1px solid;;

            &:last-child {
                border-bottom: var(--color-text) 1px solid;
            }

            .text {
                display: flex;
                flex-direction: column;
                gap: 0.25rem;

                .top-line {
                    display: flex;
                    gap: 0.5rem;
                    align-items: baseline;

                    p:not(.pill) {
                        font-family: var(--font-title);
                        text-transform: capitalize;
                        font-weight: 500;
                    }
                }
            }
                            
            &::marker {
                content: none;
            }
        }
        @include media.at('small') {
            border-left: var(--color-text) 1px solid;

            li.thought {
                padding-left: var(--spacing);
            }
        }
    }
</style>