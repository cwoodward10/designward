@layer base {
    body {
        font-family: var(--font-body);
        font-weight: var(--font-weight);
        color: var(--color-text);
    }
    main {
		margin: auto;

        min-height: 100vh;
        width: fit-content;
		max-width: calc(100vw - (2 * var(--padding-edge, 1rem)));

        section {
            max-width: 1000px;
        }
	}

    *:not(pre)>code, pre:not(.astro-code) {        
        font-weight: 300;
        color:  var(--color-code-text);
        background-color: var(--color-code-background);
        padding: 0.2em 0.35em;
        border-radius: 3px;
    }
    pre {
        padding: 0.5em 1em;
    }
    code, pre {
        font-family: var(--font-comic);
    }
    a {
        font-family: var(--font-body);
        font-size: inherit;
        font-weight: 500;
        text-decoration: none;
    
        color: var(--color-link);

        white-space: nowrap;
    
        &:visited {
            color: var(--color-link);
        }
    }
    a.external {
        --color-link: var(--color-link-external);
    }
    a:not(:has(img,svg), .container) {
        --color-a-gradient: linear-gradient(
            45deg,
            var(--color-link) 25%,
            var(--color-link-underline) 50%,
            var(--color-link) 75%
        );

        display: inline-block;

        width: fit-content;
        position: relative;

        font-weight: 500;
        translate: var(--link-base-translation);

        background: var(--color-a-gradient);
        background-size: 300%;
        -webkit-background-clip: text;
        background-clip: text;

        transition-property: color;
        transition-duration: 300ms;
        transition-timing-function: ease-out;
    
        &:hover {
            color: transparent;
            animation: move-bg 4s linear infinite;

            &::after {
                background-color: var(--color-link-underline);
                translate: 0 0.08em;
            }
        }

        &::after {
            content: "";

            position: absolute;
            top: calc(97% + var(--link-underline-offset, 0px));
            left: 0;

            height: 2px;
            width: 100%;

            background-color: color-mix(in srgb, var(--color-link-underline) 50%, var(--color-background) 70%);

            transition-property: background-color, translate;
            transition-duration: 300ms;
            transition-timing-function: ease-out;
        }
    }
    html.reduce-motion a:not(:has(img,svg)) {
        background: transparent;
        -webkit-background-clip: none;
        background-clip: none;

        &:hover {
            color: var(--color-link-underline);

            &::after {
                translate: 0 0;
            }
        }
    }
    @media (prefers-reduced-motion: reduce) {
        a:not(:has(img,svg)) {
            background: transparent;
            -webkit-background-clip: none;
            background-clip: none;

            &:hover {
                color: var(--color-link-underline);

                &::after {
                    translate: 0 0;
                }
            }
        }
    }

    a.arrow {
        display: inline-flex;
        align-items: center;

        font-size: var(--step-0);
        font-family: var(--font-title);
        color: var(--color-text);
        background: none;

        animation: none;
        
        &::before {
            content: none;
        }
        &::after {
            content: "â†’";

            position: static;
            height: fit-content;
            width: fit-content;

            background: none;
            background-color: transparent;

            margin-top: -0.1em;

            display: inline-flex;
            padding-left: clamp(4px, 0.2em, 10px);

            font-weight: inherit;
            font-family: var(--font-fun);
            font-size: inherit;
            line-height: inherit;

            color: var(--color-secondary);

            translate: 0 0;
            transition: translate 300ms ease-in-out;
        }

        &:hover {
            color: var(--color-secondary);

            &::after {
                background: transparent;
                translate: 0.5em 0;
            }
        }

        &.external {
            &:hover, &::after {
                color: var(--color-accent-primary);
            }
        }
    }
    html.reduce-motion a.arrow:hover::after {
        translate: 0 0;
    }
    @media (prefers-reduced-motion: reduce) {
        a.arrow:hover::after {
            translate: 0 0;
        }
    }
    
    h1, h2, h3, h4, h5, h6 {
        font-family: var(--font-title);

        text-wrap: auto;
            
        @supports (text-wrap: pretty) {
            text-wrap: pretty;
        }
    }
    h1.hero, .style-h1.hero {
        font-size: var(--step-5);
        font-weight: 500; 
    }
    h1, .style-h1 {
        font-size: var(--step-4);
        font-weight: 500;
        line-height: 140%;
    }
    h2, .style-h2 {
        font-size: var(--step-3);
        font-weight: 500;
        line-height: 140%
    }
    h3, .style-h3 {
        font-size: var(--step-2);
        font-weight: 500;
        line-height: 135%
    }
    h4, .style-h4 {
        font-size: var(--step-1);
        font-weight: 500;
        line-height: 135%
    }
    h5, .style-h5 {
        font-size: var(--step-0);
        font-weight: 500;
        line-height: 140%
    }
    
    p {
        font-size: var(--step-0);
        font-weight: var(--font-weight);
    }
    p.small, a.small {
        font-size: var(--step--1);
    }
    p.x-small, a.x-small {
        font-size: var(--step--2);
    }
    
    button {
        color: var(--color-text);
        cursor: pointer;
    }

    article:has(section) {
        padding-bottom: var(--section-padding);
    }

	article:not(:has(section)), section {
		display: flex;
		flex-direction: column;
		gap: 30px;

        opacity: 0;

		animation-name: animate-section-in;
		animation-duration: 1000ms;
		animation-delay: var(--initial-animation-delay, 200ms);
		animation-timing-function: ease-out;
		animation-fill-mode: forwards;
		animation-iteration-count: 1;

        p {
            max-width: 60rem;
            text-wrap: auto;
            
            @supports (text-wrap: pretty) {
                text-wrap: pretty;
            }
        }
	}
    aside {
        opacity: 0;

		animation-name: animate-section-in;
		animation-duration: 1000ms;
		animation-delay: var(--initial-animation-delay, 200ms);
		animation-timing-function: ease-out;
		animation-fill-mode: forwards;
		animation-iteration-count: 1;
    }

    hr {
        border-top-color: var(--color-secondary);
    }
}