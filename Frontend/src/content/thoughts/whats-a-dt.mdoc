---
title: On design technologists
tagline: I've had two Design Technologist roles now. Let's talk about what each has meant. 
lastEdited: '1/09/2025'
tags: [ Design, Engineering, Design Technologist, Design Engineering ]
state: 'under construction'
image:
    src: ./images/design-tech-unsplash.jpg
    alt: Design Technology. Photo by Christopher Gower on Unsplash
---

Design Technologist - I've had this job title twice now: my current role at [Square](https://squareup.com) and my previous role at [EvolveLAB](https://www.evolvelab.io). Each time, the role has been slightly different. It can be hard to keep track of! And that's just considering my own two experiences as a Design Technologist. Searching the job title on ```var(--some-job-board, LinkedIn)``` can lead to even more different different DT roles. I'm looking to clear that up a little bit here - provide some background to what I did/am doing at my Design Technologist role at least. 

## At Square
At Square, my role can be thought of similarly to what I discussed in my [Design Engineering](/garden/design-engineering-question-mark) piece. That piece did, after all, come about due to a post I came across on our Square DT Slack channel as others were trying to nail down how, exactly, to describe our role relative to industry standard titles. 

Generally though, as DTs at Square, we sit within the Design Org and work directly with brand creative teams to create web experiences (and emails though that responsibility is lessening as our PMMs move towards WYSIWIG email builders using DT-build email design systems) describing and marketing the various products that Square - or really [Block](https://www.block.xyz) as a whole - provides. The extent to which we are involved within the nitty-gritty of the design process versus thought of more as engineers to receive and build a provided Figma design is different on a per team and per project basis. My own experience has been somewhat varied. 

I've been involved very deeply within the design process for some projects - such as [the Square Specialist Directory](https://squareup.com/us/en/square-specialists/directory) - where I was even directly responsible for designing some elements on the page. Being this involved also greatly improves the page build process where I can start laying out the code in my head before the build even begins. I can work with the rest of the creative team to ensure that what is designed is feasible or even push the envelope further when their ideas would be easy to take to the next level. (Mentoring designers on what is possible and what is not, where we can push and where we need to pull back, is another key feature of the job.) 

I've also been brought in much too late on other projects - the [Developer Homepage](https://developer.squareup.com) comes to mind here. Our creative team was organzied in such a way where this was nominally a "creative" arm and a "production" arm. Though, as shown with the Directory above, we did have some design responsibility, the "high visibility" projects were kept to the "creative" arm of the team. The result was an incomplete hand-off and idea that the page could be build much more quickly than it, in reality, could be. My limited involvement meant that I was not around to discuss features such as responsive design or animations/motion where content was interactive. This lead to a timeline that was far too short as the full complexity of the page was not understood. And further design was needed to even ensure that things such as responsive sizing and motion for interactive elements were taken into account as the page moved from a static Figma file to a real, live page. Ealier involvement from me, or another DT, would have smoothed these issues as we could have, at the very least, educated the design team and guided the disucssion on what was needed to bring their ideas to life. 

I guess this is my long way of saying that, as a Design Technologist as Square, my role is narrow in one sense: craft beautiful web experiences. But it is also broad in another: we are also designers and educators. When used to our fullest, we are asked to bring our own design ideas to the table, educating/guiding our designers and pushing them further to the boundaries of what is possible on the modern web.

## At EvolveLAB
My experience at EvolveLAB was much different though it may be familiar to those involved with Technology at architecture and engineering firms. While it is true that I got my frontend engineering start there - at least in a professional sense - my role went far beyond the web. In fact, it was not until relatively late that I got into engineering web applications and web-based frontends. This role was linked much more closely with my [background in Architecture](/garden/my-design-background) in terms of the clients we supported, products we developed, and the general software we worked with regularly. 

My role at EvolveLAB started at a much more basic level: I was tasked with building out Revit families. It was not glamorous work but, at that time, EvolveLAB was just starting to dip its toe in the water of software engineering. A few sets of Revit families - casework, windows, and doors if I recall correctly - were what was paying the bills back then. 

I was able to quickly move into more complex roles. At that time, when software building for me was at the hobbyist level of watching online courses, "complex roles" meant pushing the boundaries of Grasshopper and Dynamo. I made quite a few scripts for clients. I very much enjoyed the work. I'm not sure that I would as much now. Not when I can just as easily write code. But back then, it was great work. It allowed me to slowly dip my toe in the water of software engineering. 

My first professional coding experiences, I'm not counting a couple scripts I wrote for small web projects we took on at [RINKA+](https://www.rinka.com), were a part of those old Grasshopper and Dynamo scripting days. I wrote many a custom Python node for Dynamo. I eventually graduated to writing more robust and more complex C# plugins for Grasshopper. One such project was to build a script out for the team building the [Lucas Museum](https://lucasmuseum.org) in LA that helped them track panel construction and delivery. That script pretty much turned into a set of custom Grasshopper nodes. The code was pretty terrible if I'm being honest. But it was something!

We quickly leveled up from there. I joined a small group of EvolveLAB-ers that were building a much more complex mini-application - okay fine, it was just a very complex Revit plugin but still - for a Michigan-based metal panel manufactuer. That code was also... not great... But we learned a lot and leveled up quickly as we worked. This experience really got me ready to lead a generative design, web application we built for an architecture firm client. It was my first professional web app and it opened a lot of doors. I built the first UI for [Helix](https://www.evolvelab.io/helix) after that. The rest is history. That pretty much got me to where I am now. 