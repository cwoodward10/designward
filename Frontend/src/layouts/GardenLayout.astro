---
import ContentLayout from "./ContentLayout.astro";
import ContentImage from "@components/content-components/ContentImage.astro";
import AlertDialog from "@components/content-components/AlertDialog.astro";

import { NoteState } from "../content.config.ts";

const { data } = Astro.props;
---

<ContentLayout pageTitle={data.title}>
    <hgroup class="intro" slot="intro">
        {data.type === 'long-form' && 
            <p class="pill">{data.subType}</p>
        }
        {data.type === 'short-form' && 
        <p class="pill">note</p>
    }
        <h1>{data.title}</h1>
        {data.tagline && <h5 class="tagline">{data.tagline}</h5>}
        <p class="date">
            <span class="tag">last edited:</span> 
            <span class="style-h5">{data.lastEdited.toLocaleDateString()}</span>
        </p>
        <p class="state">
            <span class="tag">Writing state:</span> 
            <span class="style-h5">{data.state}</span>
        </p>
    </hgroup>
    <div class="wrapper" slot="content">
        {data.image && data.showTitleImage !== false &&
            <div class="hero">
                <ContentImage src={data.image.src} alt={data.image.alt ?? data.title} />
            </div>
        }
        {data.state === NoteState[0] &&
            <AlertDialog style="margin-bottom: 2em" tag="div">
                <p><em class="alert-title">Note:</em> This thought is just a concept and thus not fleshed out much at all...</p>
            </AlertDialog>
        }
        {data.state === NoteState[1] &&
            <AlertDialog style="margin-bottom: 2em" tag="div">
                <p><em class="alert-title">Note:</em> This thought is under construction. It may or may not have been thoroughly proof-read.</p>
            </AlertDialog>
        }
        <slot />
    </div>
    <a slot="back" class="arrow" href="/garden/">Back to the garden</a>
</ContentLayout>

<style>
    hgroup.intro {
        .pill {
            margin-bottom: 0.5em;
        }
        .tagline {
            margin-bottom: 0.25em;
        }
        .tag {
            font-size: 0.8em;
            font-weight: 300;
            text-transform: lowercase;
        }
    }
    .wrapper {
        display: flex;
        flex-direction: column;
        align-items: center;
    }
    .hero {
        width: 100%;
        max-width: calc(100vw - (2 * var(--padding-edge, 1rem)));
    }
    .alert-title {
        font-family: var(--font-title);
        font-weight: 500;
        color: var(--color-secondary);
    }
</style>