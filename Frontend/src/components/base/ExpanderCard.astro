---
interface Props {
  cards: {
    name: string;
    url: string;
    imageUrl: string;
  }[];
}
const { cards } = Astro.props;
---

<script>
    const handleClick = (e: Event) => {
        if (!e.target) {
            return;
        }
        
        let card: HTMLElement;
        if ((e.target as HTMLElement).classList.contains('card')) {
            card = e.target as HTMLElement;
        } else {
            const closest = (e.target as HTMLElement).closest('.card') as HTMLElement | null;
            if (!closest) {
                return;
            }
            
            card = closest;
        }

        const isActive = card.classList.contains('active');
        card.classList.toggle('active', !isActive);
        card.setAttribute('aria-expanded', `${!isActive}`);
    }

    const cards = document.querySelectorAll('.card');
    cards.forEach(c => {
        c.addEventListener('click', handleClick);
    })
</script>

<div class="expander-container">
    {
        cards.map((c) => (
            <button class="card">
                <img class="image" src={c.imageUrl! as string} alt={c.name} />
                <p class="title style-h5">{c.name}</p>
                <a 
                    class={`arrow style-h5 ${c.url.includes('https') ? 'external' : ''}`} 
                    href={c.url} 
                    target={c.url.includes('https') ? '_blank' : '_self'}
                >
                    View project
                </a>
            </button>
        ))
    }
</div>

<style lang="scss">
    @use '@assets/styles/sass/breakpoints.scss' as media;

    .expander-container {
        --base-height: 60px;

        display: flex;
        flex-direction: column;
        gap: 0.75rem;

        height: fit-content;
    }

    .card {
        position: relative;
        display: flex;
        overflow: hidden;

        width: 100%;
        height: 100%;
        max-height: var(--base-height);
        
        transition: max-height 500ms ease-in-out;
        transition-delay: 0ms;
        
        filter: drop-shadow(0 2px 2px rgba(0, 0, 0, 0.25));

        &::after {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            
            background-color: color-mix(in srgb, var(--color-offblack) 30%, transparent 10%);
        }

        .image {
            position: relative;
            width: 100%;
            object-fit: cover;
            opacity: 0.35;

            transition: opacity 500ms ease-in-out;
        }

        .title {
            z-index: 2;
            position: absolute;
            display: inline-block;
            width: fit-content;

            color: var(--color-offwhite);
            
            top: 50%;
            left: 50%; 
            translate: -50% -50%;

            transition: opacity 500ms ease-in-out;
        }

        a {
            z-index: 2;
            position: absolute;
            display: inline-flex;
            gap: 0.25em;
            width: fit-content;

            padding: 0.25rem 1rem;
            color: var(--color-offwhite);
            background-color: color-mix(in srgb, var(--color-offblack) 35%, transparent 90%);
            border-radius: 0.25rem;
            border: var(--color-offwhite) 1px solid;
            
            top: 50%;
            left: 50%; 
            translate: -50% -50%;

            opacity: 0.0;
            pointer-events: none;
            transition: opacity 500ms linear;
        }

        &.active {
            max-height: 600px;

            .image {
                opacity: 1;;
            }

            .title {
                opacity: 0;
                pointer-events: none;
            }
            
            a {
                opacity: 1;
                pointer-events: all;
            }
        }
    }
    :global(html.reduce-motion) {
        .card {
            transition: none;
        }
    }
    @media (prefers-reduced-motion: reduce) {
        .card {
            transition: none;
        }
    }
</style>