---
interface Props {
    name?: string;
    cards: {
        name: string;
        url: string;
        imageUrl: string;
    }[];
}
const { name, cards } = Astro.props;
---

<div class="expander-container">
    {
        cards.map((c) => (
            <details class="card" name={name}>
                <summary>
                    <p class="title style-h5">{c.name}</p>
                    <img src={c.imageUrl! as string} alt={c.name} />
                </summary>
                <a 
                    class={`arrow style-h5 ${c.url.includes('https') ? 'external' : ''}`} 
                    href={c.url} 
                    target={c.url.includes('https') ? '_blank' : '_self'}
                >
                    View project
                </a>
            </details>
        ))
    }
</div>

<style lang="scss">
    @use '@assets/styles/sass/breakpoints.scss' as media;

    .expander-container {
        --base-height: 60px;

        display: flex;
        flex-direction: column;
        gap: 0.75rem;

        height: fit-content;
    }

    .card {
        position: relative;
        display: flex;
        overflow: hidden;

        height: var(--base-height);
        
        transition: height 500ms ease-in-out;
        transition-delay: 0ms;
        
        filter: drop-shadow(0 2px 2px rgba(0, 0, 0, 0.25));

        img {
            position: absolute;
            top: 50%;
            left: 50%;
            translate: -50% -50%;
            min-width: 100%;
            width: auto;
            min-height: 100%;
            height: auto;
            
            object-fit: cover;
            opacity: 0.35;

            transition: opacity 500ms ease-in-out;
        }

        summary::marker {
            content: none;
        }

        .title {
            z-index: 2;
            display: inline-block;
            width: fit-content;

            position: absolute;
            top: 50%;
            left: 50%;
            translate: -50% -50%;

            transition: opacity 500ms ease-in-out;
        }

        a {
            z-index: 2;
            position: absolute;
            display: inline-flex;
            gap: 0.25em;
            width: fit-content;

            padding: 0.25rem 1rem;
            color: var(--color-offwhite);
            background-color: color-mix(in srgb, var(--color-offblack) 45%, transparent 70%);
            border-radius: 0.25rem;
            border: var(--color-offwhite) 1px solid;
            
            top: 50%;
            left: 50%; 
            translate: -50% -50%;

            opacity: 0.0;
            pointer-events: none;
            transition: opacity 500ms linear;
        }

        &[open] {
            height: 600px;

            img {
                opacity: 1;;
            }

            .title {
                opacity: 0;
                pointer-events: none;
            }
            
            a {
                opacity: 1;
                pointer-events: all;
            }
        }
    }
    :global(html.reduce-motion) {
        .card {
            transition: none;
        }
    }
    @media (prefers-reduced-motion: reduce) {
        .card {
            transition: none;
        }
    }
</style>